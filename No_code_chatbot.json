{
    "name": "Integration Webhooks",
    "flow": [
        {
            "id": 1,
            "module": "gateway:CustomWebHook",
            "version": 1,
            "parameters": {
                "hook": 3331138,
                "maxResults": 1
            },
            "mapper": {},
            "metadata": {
                "designer": {
                    "x": -351,
                    "y": -61
                },
                "restore": {
                    "parameters": {
                        "hook": {
                            "data": {
                                "editable": "true"
                            },
                            "label": "whatsapp_incoming"
                        }
                    }
                },
                "parameters": [
                    {
                        "name": "hook",
                        "type": "hook:gateway-webhook",
                        "label": "Webhook",
                        "required": true
                    },
                    {
                        "name": "maxResults",
                        "type": "number",
                        "label": "Maximum number of results"
                    }
                ]
            }
        },
        {
            "id": 19,
            "module": "gateway:WebhookRespond",
            "version": 1,
            "parameters": {},
            "mapper": {
                "body": "",
                "status": "204",
                "headers": []
            },
            "metadata": {
                "designer": {
                    "x": -111,
                    "y": -12
                },
                "restore": {
                    "expect": {
                        "headers": {
                            "mode": "chose"
                        }
                    }
                },
                "expect": [
                    {
                        "name": "status",
                        "type": "uinteger",
                        "label": "Status",
                        "required": true,
                        "validate": {
                            "min": 100
                        }
                    },
                    {
                        "name": "body",
                        "type": "any",
                        "label": "Body"
                    },
                    {
                        "name": "headers",
                        "spec": [
                            {
                                "name": "key",
                                "type": "text",
                                "label": "Key",
                                "required": true,
                                "validate": {
                                    "max": 256
                                }
                            },
                            {
                                "name": "value",
                                "type": "text",
                                "label": "Value",
                                "required": true,
                                "validate": {
                                    "max": 4096
                                }
                            }
                        ],
                        "type": "array",
                        "label": "Custom headers",
                        "validate": {
                            "maxItems": 16
                        }
                    }
                ]
            }
        },
        {
            "id": 15,
            "module": "datastore:GetRecord",
            "version": 1,
            "parameters": {
                "datastore": 120917
            },
            "mapper": {
                "key": "{{1.From}}",
                "returnWrapped": false
            },
            "metadata": {
                "designer": {
                    "x": 171,
                    "y": -56
                },
                "restore": {
                    "parameters": {
                        "datastore": {
                            "label": "My data store"
                        }
                    }
                },
                "parameters": [
                    {
                        "name": "datastore",
                        "type": "datastore",
                        "label": "Data store",
                        "required": true
                    }
                ],
                "expect": [
                    {
                        "name": "key",
                        "type": "text",
                        "label": "Key",
                        "required": true
                    },
                    {
                        "name": "returnWrapped",
                        "type": "boolean",
                        "label": "Return Wrapped Output",
                        "required": true
                    }
                ],
                "interface": [
                    {
                        "help": "",
                        "name": "all_messages",
                        "type": "text",
                        "label": null,
                        "default": null,
                        "required": false,
                        "multiline": true
                    }
                ]
            }
        },
        {
            "id": 17,
            "module": "util:SetVariable2",
            "version": 1,
            "parameters": {},
            "mapper": {
                "name": "messages",
                "scope": "roundtrip",
                "value": "{{15.all_messages}}\nUser: {{1.Body}}"
            },
            "metadata": {
                "designer": {
                    "x": 321,
                    "y": 324
                },
                "restore": {
                    "expect": {
                        "scope": {
                            "label": "One cycle"
                        }
                    }
                },
                "expect": [
                    {
                        "name": "name",
                        "type": "text",
                        "label": "Variable name",
                        "required": true
                    },
                    {
                        "name": "scope",
                        "type": "select",
                        "label": "Variable lifetime",
                        "required": true,
                        "validate": {
                            "enum": [
                                "roundtrip",
                                "execution"
                            ]
                        }
                    },
                    {
                        "name": "value",
                        "type": "any",
                        "label": "Variable value"
                    }
                ],
                "interface": [
                    {
                        "name": "messages",
                        "type": "any",
                        "label": "messages"
                    }
                ]
            }
        },
        {
            "id": 5,
            "module": "http:ActionSendData",
            "version": 3,
            "parameters": {
                "handleErrors": true,
                "useNewZLibDeCompress": true
            },
            "mapper": {
                "url": "https://generativelanguage.googleapis.com/v1beta/models/gemini-2.5-flash:generateContent?key=AIzaSyAWajvmj7U6XytmAzaBZIbeVR2648n_PKM",
                "serializeUrl": false,
                "method": "post",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "qs": [],
                "bodyType": "raw",
                "parseResponse": true,
                "authUser": "",
                "authPass": "",
                "timeout": "",
                "shareCookies": false,
                "ca": "",
                "rejectUnauthorized": true,
                "followRedirect": true,
                "useQuerystring": false,
                "gzip": true,
                "useMtls": false,
                "contentType": "application/json",
                "data": "{\r\n  \"contents\": [\r\n    {\r\n      \"parts\": [\r\n        {\r\n          \"text\": \"You are a friendly WhatsApp chatbot.\\nReply naturally to the user message: {{1.Body}}.\\nAnd use this as a chat history or context while answering {{17.messages}}.\\n\nDon't use double quotes in your output, if quotes are needed use single quotes only. Only include a short 'thank you' message if the user indicates they are ending the conversation (e.g., says 'bye', 'thanks', 'thank you', 'that's all', or similar).\\nOtherwise, respond normally without any thank-you. Please keep the response under 1200 characters while preserving key information.\"\r\n        }\r\n      ]\r\n    }\r\n  ]\r\n}",
                "followAllRedirects": false
            },
            "metadata": {
                "designer": {
                    "x": 513,
                    "y": -24
                },
                "restore": {
                    "expect": {
                        "method": {
                            "mode": "chose",
                            "label": "POST"
                        },
                        "headers": {
                            "mode": "chose",
                            "items": [
                                null
                            ]
                        },
                        "qs": {
                            "mode": "chose"
                        },
                        "bodyType": {
                            "label": "Raw"
                        },
                        "contentType": {
                            "label": "JSON (application/json)"
                        }
                    }
                },
                "parameters": [
                    {
                        "name": "handleErrors",
                        "type": "boolean",
                        "label": "Evaluate all states as errors (except for 2xx and 3xx )",
                        "required": true
                    },
                    {
                        "name": "useNewZLibDeCompress",
                        "type": "hidden"
                    }
                ],
                "expect": [
                    {
                        "name": "url",
                        "type": "url",
                        "label": "URL",
                        "required": true
                    },
                    {
                        "name": "serializeUrl",
                        "type": "boolean",
                        "label": "Serialize URL",
                        "required": true
                    },
                    {
                        "name": "method",
                        "type": "select",
                        "label": "Method",
                        "required": true,
                        "validate": {
                            "enum": [
                                "get",
                                "head",
                                "post",
                                "put",
                                "patch",
                                "delete",
                                "options"
                            ]
                        }
                    },
                    {
                        "name": "headers",
                        "type": "array",
                        "label": "Headers",
                        "spec": [
                            {
                                "name": "name",
                                "label": "Name",
                                "type": "text",
                                "required": true
                            },
                            {
                                "name": "value",
                                "label": "Value",
                                "type": "text"
                            }
                        ]
                    },
                    {
                        "name": "qs",
                        "type": "array",
                        "label": "Query String",
                        "spec": [
                            {
                                "name": "name",
                                "label": "Name",
                                "type": "text",
                                "required": true
                            },
                            {
                                "name": "value",
                                "label": "Value",
                                "type": "text"
                            }
                        ]
                    },
                    {
                        "name": "bodyType",
                        "type": "select",
                        "label": "Body type",
                        "validate": {
                            "enum": [
                                "raw",
                                "x_www_form_urlencoded",
                                "multipart_form_data"
                            ]
                        }
                    },
                    {
                        "name": "parseResponse",
                        "type": "boolean",
                        "label": "Parse response",
                        "required": true
                    },
                    {
                        "name": "authUser",
                        "type": "text",
                        "label": "User name"
                    },
                    {
                        "name": "authPass",
                        "type": "password",
                        "label": "Password"
                    },
                    {
                        "name": "timeout",
                        "type": "uinteger",
                        "label": "Timeout",
                        "validate": {
                            "max": 300,
                            "min": 1
                        }
                    },
                    {
                        "name": "shareCookies",
                        "type": "boolean",
                        "label": "Share cookies with other HTTP modules",
                        "required": true
                    },
                    {
                        "name": "ca",
                        "type": "cert",
                        "label": "Self-signed certificate"
                    },
                    {
                        "name": "rejectUnauthorized",
                        "type": "boolean",
                        "label": "Reject connections that are using unverified (self-signed) certificates",
                        "required": true
                    },
                    {
                        "name": "followRedirect",
                        "type": "boolean",
                        "label": "Follow redirect",
                        "required": true
                    },
                    {
                        "name": "useQuerystring",
                        "type": "boolean",
                        "label": "Disable serialization of multiple same query string keys as arrays",
                        "required": true
                    },
                    {
                        "name": "gzip",
                        "type": "boolean",
                        "label": "Request compressed content",
                        "required": true
                    },
                    {
                        "name": "useMtls",
                        "type": "boolean",
                        "label": "Use Mutual TLS",
                        "required": true
                    },
                    {
                        "name": "contentType",
                        "type": "select",
                        "label": "Content type",
                        "validate": {
                            "enum": [
                                "text/plain",
                                "application/json",
                                "application/xml",
                                "text/xml",
                                "text/html",
                                "custom"
                            ]
                        }
                    },
                    {
                        "name": "data",
                        "type": "buffer",
                        "label": "Request content"
                    },
                    {
                        "name": "followAllRedirects",
                        "type": "boolean",
                        "label": "Follow all redirect",
                        "required": true
                    }
                ]
            }
        },
        {
            "id": 18,
            "module": "util:SetVariable2",
            "version": 1,
            "parameters": {},
            "mapper": {
                "name": "messages",
                "scope": "roundtrip",
                "value": "{{17.messages}}\nGemini: {{5.data.candidates[].content.parts[].text}}"
            },
            "metadata": {
                "designer": {
                    "x": 669,
                    "y": 345
                },
                "restore": {
                    "expect": {
                        "scope": {
                            "label": "One cycle"
                        }
                    }
                },
                "expect": [
                    {
                        "name": "name",
                        "type": "text",
                        "label": "Variable name",
                        "required": true
                    },
                    {
                        "name": "scope",
                        "type": "select",
                        "label": "Variable lifetime",
                        "required": true,
                        "validate": {
                            "enum": [
                                "roundtrip",
                                "execution"
                            ]
                        }
                    },
                    {
                        "name": "value",
                        "type": "any",
                        "label": "Variable value"
                    }
                ],
                "interface": [
                    {
                        "name": "messages",
                        "type": "any",
                        "label": "messages"
                    }
                ]
            }
        },
        {
            "id": 16,
            "module": "datastore:UpdateRecord",
            "version": 1,
            "parameters": {
                "datastore": 120917
            },
            "mapper": {
                "key": "{{1.From}}",
                "data": {
                    "all_messages": "{{18.messages}}"
                },
                "upsert": true,
                "overwriteArrays": false
            },
            "metadata": {
                "designer": {
                    "x": 903,
                    "y": -19
                },
                "restore": {
                    "expect": {
                        "upsert": {
                            "mode": "chose"
                        },
                        "overwriteArrays": {
                            "mode": "chose"
                        }
                    },
                    "parameters": {
                        "datastore": {
                            "label": "My data store"
                        }
                    }
                },
                "parameters": [
                    {
                        "name": "datastore",
                        "type": "datastore",
                        "label": "Data store",
                        "required": true
                    }
                ],
                "expect": [
                    {
                        "name": "key",
                        "type": "text",
                        "label": "Key",
                        "required": true
                    },
                    {
                        "name": "upsert",
                        "type": "boolean",
                        "label": "Insert missing record",
                        "required": true
                    },
                    {
                        "name": "overwriteArrays",
                        "type": "boolean",
                        "label": "Overwrite an existing array in the record",
                        "required": true
                    },
                    {
                        "name": "data",
                        "spec": [
                            {
                                "name": "all_messages",
                                "type": "text",
                                "label": null
                            }
                        ],
                        "type": "collection",
                        "label": "Record"
                    }
                ]
            }
        },
        {
            "id": 3,
            "module": "twilio:SendSMS",
            "version": 2,
            "parameters": {
                "__IMTCONN__": 12090045
            },
            "mapper": {
                "to": "whatsapp:+918126468387",
                "body": "{{5.data.candidates[].content.parts[].text}}",
                "from": "whatsapp:+14155238886",
                "fromType": "phone",
                "messageBody": "body"
            },
            "metadata": {
                "designer": {
                    "x": 1238,
                    "y": -38
                },
                "restore": {
                    "expect": {
                        "from": {
                            "mode": "edit"
                        },
                        "fromType": {
                            "mode": "chose",
                            "label": "phone number"
                        },
                        "mediaUrl": {
                            "mode": "chose"
                        },
                        "messageBody": {
                            "mode": "chose",
                            "label": "Create a Body"
                        },
                        "smartEncoded": {
                            "mode": "chose"
                        },
                        "applicationSid": {
                            "mode": "chose"
                        },
                        "provideFeedback": {
                            "mode": "chose"
                        }
                    },
                    "parameters": {
                        "__IMTCONN__": {
                            "data": {
                                "scoped": "true",
                                "connection": "twilio"
                            },
                            "label": "My Twilio connection"
                        }
                    }
                },
                "parameters": [
                    {
                        "name": "__IMTCONN__",
                        "type": "account:twilio",
                        "label": "Connection",
                        "required": true
                    }
                ],
                "expect": [
                    {
                        "name": "fromType",
                        "type": "select",
                        "label": "Send a message from",
                        "required": true,
                        "validate": {
                            "enum": [
                                "phone",
                                "service",
                                "channel"
                            ]
                        }
                    },
                    {
                        "name": "to",
                        "type": "text",
                        "label": "To",
                        "required": true
                    },
                    {
                        "name": "messageBody",
                        "type": "select",
                        "label": "Message Body",
                        "required": true,
                        "validate": {
                            "enum": [
                                "body",
                                "template"
                            ]
                        }
                    },
                    {
                        "name": "mediaUrl",
                        "spec": {
                            "name": "value",
                            "type": "url"
                        },
                        "type": "array",
                        "label": "Media URL"
                    },
                    {
                        "name": "smartEncoded",
                        "type": "boolean",
                        "label": "Smart encoded"
                    },
                    {
                        "name": "validityPeriod",
                        "type": "uinteger",
                        "label": "Validity period"
                    },
                    {
                        "name": "statusCallback",
                        "type": "url",
                        "label": "Status callback"
                    },
                    {
                        "name": "applicationSid",
                        "type": "select",
                        "label": "Application"
                    },
                    {
                        "name": "maxPrice",
                        "type": "number",
                        "label": "Max price"
                    },
                    {
                        "name": "provideFeedback",
                        "type": "boolean",
                        "label": "Provide feedback"
                    },
                    {
                        "name": "from",
                        "type": "select",
                        "label": "Phone number",
                        "required": true
                    },
                    {
                        "name": "body",
                        "type": "text",
                        "label": "Body",
                        "required": true,
                        "validate": {
                            "max": 1600
                        }
                    }
                ]
            }
        }
    ],
    "metadata": {
        "instant": true,
        "version": 1,
        "scenario": {
            "roundtrips": 1,
            "maxErrors": 3,
            "autoCommit": true,
            "autoCommitTriggerLast": true,
            "sequential": false,
            "slots": null,
            "confidential": false,
            "dataloss": false,
            "dlq": false,
            "freshVariables": false
        },
        "designer": {
            "orphans": []
        },
        "zone": "eu2.make.com",
        "notes": []
    }
}